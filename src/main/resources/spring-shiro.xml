<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans.xsd">
  
  <bean id="myRealm" class="com.unicom.busi.realm.MyRealm">
  	<property name="credentialsMatcher" ref="hashedCredentialsMatcher"/>
  </bean>
  
  
  <!-- 凭证匹配器，用来将从数据库中取出的用户的凭证信息与从前台传入的凭证信息进行比对  -->
  <bean id="hashedCredentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
  	<!-- 加密使用的散列算法 -->
  	<property name="hashAlgorithmName" value="MD5"/>
  	<!-- 加密迭代次数 -->
  	<property name="hashIterations" value="2"/>
  	<!-- 加密的凭证使用Hex还是Base64编码，true为使用Hex -->
  	<property name="storedCredentialsHexEncoded" value="true"/>
  </bean>
  
  <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
  	<property name="realm" ref="myRealm"/>
  	<property name="sessionManager" ref="sessionManager"/>
  	<property name="cacheManager" ref="cacheManager"/>
  </bean>
  
  <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
  	<property name="securityManager" ref="securityManager"/>
  	<property name="loginUrl" value="/frm/init/signin"/>
  	<property name="unauthorizedUrl" value="/frm/init/unauthorized"/>
  	<property name="filterChainDefinitions">
  		<value>
  			<!-- /frm/init/logout=logout 不需要配置，配置之后不走控制层中的logout方法 -->
            /frm/init/signin=authc
			/frm/init/login=anon
			/frm/resource/**=anon
			/frm/**=authc
  		</value>
  	</property>
  </bean>
  
  <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
  	<property name="sessionIdCookie" ref="sessionIdCookie"/>
  	<property name="sessionIdCookieEnabled" value="true"/>
  	<!-- 设置会话的全局过期时间（毫秒为单位），默认30分钟 -->
  	<property name="globalSessionTimeout" value="1800000"/>
  	<!-- 是否开启会话验证器,默认是开启的 -->
  	<property name="sessionValidationSchedulerEnabled" value="true"/>
  	<!-- 设置会话验证调度器 -->
  	<property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
  	<!-- 会话过期时删除过期的会话 -->
  	<property name="deleteInvalidSessions" value="true"/>
  	<property name="sessionDAO" ref="sessionDAO"/>
  </bean>
  
  <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
  	<constructor-arg value="sid"/>
  	<!-- -1表示关闭浏览器时过期Cookie -->
  	<property name="maxAge" value="-1"/>
   	<property name="httpOnly" value="true"/>
  </bean>
  
  <!-- 会话验证调度器，用于定期的验证会话是否过期 -->
  <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
  	<!-- 设置调度时间间隔，单位毫秒，默认1小时 -->
  	<property name="interval" value="3600000"/>
  	<!-- 设置会话验证调度器进行会话验证时的会话管理器 -->
  	<property name="sessionManager" ref="sessionManager"/>
  </bean>
  
  <!-- 会话ID生成器 -->
  <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
  <!-- 会话DAO -->
  <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
  	<property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
  	<property name="sessionIdGenerator" ref="sessionIdGenerator"/>
  </bean>
  <!-- 缓存管理器，使用Ehcache实现 -->
  <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
  	<property name="cacheManager" ref="ehCacheManager"/>
  </bean>
  <bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml"/>
  </bean>
  
  <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
  
</beans>